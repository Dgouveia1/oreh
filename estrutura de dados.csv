categoria,objeto,detalhes
1. TABELAS E COLUNAS,TABELA: affiliates,COLUNA: commission_rate | TIPO: numeric | NULÁVEL: YES | PADRÃO: 0.20 | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: affiliates,COLUNA: contact_email | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: affiliates,COLUNA: name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: affiliates,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: affiliates,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: affiliates,COLUNA: hotmart_code | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ai_token_usage,COLUNA: user_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ai_token_usage,COLUNA: tokens_used | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ai_token_usage,COLUNA: flow_name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ai_token_usage,COLUNA: id | TIPO: bigint | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ai_token_usage,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ai_token_usage,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: user_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: message | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: level | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: id | TIPO: bigint | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: metadata | TIPO: jsonb | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: app_logs,COLUNA: company_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: customer_phone | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: status | TIPO: text | NULÁVEL: YES | PADRÃO: 'aberto'::text | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: last_message_summary | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: lead_value | TIPO: numeric | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: temperatura | TIPO: text | NULÁVEL: YES | PADRÃO: 'TOPO DO FUNIL'::text | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: customer_name | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: updated_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: chats,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: uuid_generate_v4() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: industry | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: cnpj | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: official_name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: affiliate_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: Identifica o afiliado responsável pela empresa/cliente.
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: status | TIPO: text | NULÁVEL: YES | PADRÃO: 'onboarding'::text | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: asaas_subscription_id | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: asaas_customer_id | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: address | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: uuid_generate_v4() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: plan_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: phone | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: companies,COLUNA: corporate_email | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: ai_tone_formality | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: ai_agent_function | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: evolution_number | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: is_ai_active | TIPO: boolean | NULÁVEL: YES | PADRÃO: true | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: ai_tone_adaptability | TIPO: boolean | NULÁVEL: YES | PADRÃO: true | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: business_info | TIPO: jsonb | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: evolution_api_key | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: evolution_api_url | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: evolution_instance_name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: ai_personality_style | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: ai_language_complexity | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: ai_dominant_traits | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: company_secrets,COLUNA: base_prompt | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: documents,COLUNA: id | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: documents,COLUNA: content | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: documents,COLUNA: metadata | TIPO: jsonb | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: documents,COLUNA: company_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: documents,COLUNA: file_path | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: documents,COLUNA: embedding | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: assunto | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: telefone | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: local | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: data | TIPO: date | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: hora_inicio | TIPO: time without time zone | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: hora_fim | TIPO: time without time zone | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: events,COLUNA: cliente | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ingestion_queue,COLUNA: status | TIPO: text | NULÁVEL: YES | PADRÃO: 'pending'::text | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ingestion_queue,COLUNA: updated_at | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ingestion_queue,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ingestion_queue,COLUNA: file_path | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ingestion_queue,COLUNA: company_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: ingestion_queue,COLUNA: id | TIPO: bigint | NULÁVEL: NO | PADRÃO: nextval('ingestion_queue_id_seq'::regclass) | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: leads,"COLUNA: resumo | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: Um breve resumo sobre o lead, suas necessidades ou a última conversa."
1. TABELAS E COLUNAS,TABELA: leads,COLUNA: nome | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: Nome completo do lead.
1. TABELAS E COLUNAS,TABELA: leads,COLUNA: criado_em | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: Data e hora de criação do registro do lead.
1. TABELAS E COLUNAS,TABELA: leads,"COLUNA: telefone | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: Número de telefone para contato, deve ser único."
1. TABELAS E COLUNAS,TABELA: leads,COLUNA: ultima_interacao | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: Data e hora da última conversa ou contato.
1. TABELAS E COLUNAS,TABELA: leads,"COLUNA: temperatura | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: Nível de interesse do lead (Quente, Morno, Frio)."
1. TABELAS E COLUNAS,TABELA: leads,COLUNA: id | TIPO: bigint | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: n8n_chat_histories,COLUNA: id | TIPO: integer | NULÁVEL: NO | PADRÃO: nextval('n8n_chat_histories_id_seq'::regclass) | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: n8n_chat_histories,COLUNA: message | TIPO: jsonb | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: n8n_chat_histories,COLUNA: session_id | TIPO: character varying(255) | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: onboarding_data,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: gen_random_uuid() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: onboarding_data,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: onboarding_data,COLUNA: responses | TIPO: jsonb | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: onboarding_data,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: monthly_chat_limit | TIPO: integer | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: name | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: description | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: Descrição detalhada do que o plano inclui.
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: uuid_generate_v4() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: max_users | TIPO: integer | NULÁVEL: YES | PADRÃO: 1 | DESCRIÇÃO: Número máximo de usuários permitidos neste plano.
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: is_active | TIPO: boolean | NULÁVEL: YES | PADRÃO: true | DESCRIÇÃO: Se o plano está ativo e pode ser selecionado.
1. TABELAS E COLUNAS,TABELA: plans,COLUNA: price | TIPO: numeric | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: gen_random_uuid() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: name | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: description | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: YES | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: photo_urls | TIPO: jsonb | NULÁVEL: YES | PADRÃO: '[]'::jsonb | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: value | TIPO: numeric | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: products,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,COLUNA: company_id | TIPO: uuid | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,COLUNA: email | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,COLUNA: job_title | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,"COLUNA: role | TIPO: text | NULÁVEL: YES | PADRÃO: 'app_user'::text | DESCRIÇÃO: Define o perfil do usuário (ex: app_user, affiliate, admin)"
1. TABELAS E COLUNAS,TABELA: users,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,COLUNA: full_name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users,COLUNA: userinitial | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: company_id | TIPO: uuid | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: role | TIPO: text | NULÁVEL: YES | PADRÃO: 'admin'::text | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: job_title | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: email | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: full_name | TIPO: text | NULÁVEL: YES | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: created_at | TIPO: timestamp with time zone | NULÁVEL: NO | PADRÃO: now() | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: password_hash | TIPO: text | NULÁVEL: NO | PADRÃO: N/A | DESCRIÇÃO: N/A
1. TABELAS E COLUNAS,TABELA: users_backup,COLUNA: id | TIPO: uuid | NULÁVEL: NO | PADRÃO: uuid_generate_v4() | DESCRIÇÃO: N/A
2. CONSTRAINTS (CHAVES),TABELA: affiliates,CONSTRAINT: affiliates_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): id | REFERENCIA: users(id)
2. CONSTRAINTS (CHAVES),TABELA: affiliates,CONSTRAINT: affiliates_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: ai_token_usage,null
2. CONSTRAINTS (CHAVES),TABELA: ai_token_usage,CONSTRAINT: ai_token_usage_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: ai_token_usage,CONSTRAINT: ai_token_usage_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: app_logs,CONSTRAINT: app_logs_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: app_logs,CONSTRAINT: app_logs_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: app_logs,null
2. CONSTRAINTS (CHAVES),TABELA: chats,CONSTRAINT: chats_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: chats,CONSTRAINT: chats_pkey | TIPO: PRIMARY KEY | COLUNA(S): customer_phone
2. CONSTRAINTS (CHAVES),TABELA: chats,CONSTRAINT: chats_pkey | TIPO: PRIMARY KEY | COLUNA(S): customer_phone
2. CONSTRAINTS (CHAVES),TABELA: chats,CONSTRAINT: chats_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: chats,CONSTRAINT: chats_customer_phone_key | TIPO: UNIQUE | COLUNA(S): customer_phone
2. CONSTRAINTS (CHAVES),TABELA: chats,CONSTRAINT: chats_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: companies,CONSTRAINT: companies_plan_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): plan_id | REFERENCIA: plans(id)
2. CONSTRAINTS (CHAVES),TABELA: companies,CONSTRAINT: companies_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: companies,CONSTRAINT: companies_cnpj_key | TIPO: UNIQUE | COLUNA(S): cnpj
2. CONSTRAINTS (CHAVES),TABELA: companies,CONSTRAINT: companies_affiliate_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): affiliate_id | REFERENCIA: affiliates(id)
2. CONSTRAINTS (CHAVES),TABELA: company_secrets,CONSTRAINT: company_secrets_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: company_secrets,CONSTRAINT: company_secrets_pkey | TIPO: PRIMARY KEY | COLUNA(S): company_id
2. CONSTRAINTS (CHAVES),TABELA: documents,CONSTRAINT: documents_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: documents,CONSTRAINT: documents_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: events,CONSTRAINT: events_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: events,CONSTRAINT: events_pkey | TIPO: PRIMARY KEY | COLUNA(S): telefone
2. CONSTRAINTS (CHAVES),TABELA: ingestion_queue,CONSTRAINT: ingestion_queue_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: ingestion_queue,CONSTRAINT: ingestion_queue_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: leads,CONSTRAINT: leads_telefone_key | TIPO: UNIQUE | COLUNA(S): telefone
2. CONSTRAINTS (CHAVES),TABELA: leads,CONSTRAINT: leads_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: n8n_chat_histories,CONSTRAINT: n8n_chat_histories_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: onboarding_data,CONSTRAINT: onboarding_data_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: onboarding_data,CONSTRAINT: onboarding_data_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: plans,CONSTRAINT: plans_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: products,CONSTRAINT: products_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: products,CONSTRAINT: products_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: users,CONSTRAINT: users_company_id_fkey1 | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
2. CONSTRAINTS (CHAVES),TABELA: users,CONSTRAINT: users_pkey1 | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: users,CONSTRAINT: users_email_key1 | TIPO: UNIQUE | COLUNA(S): email
2. CONSTRAINTS (CHAVES),TABELA: users,null
2. CONSTRAINTS (CHAVES),TABELA: users_backup,CONSTRAINT: users_pkey | TIPO: PRIMARY KEY | COLUNA(S): id
2. CONSTRAINTS (CHAVES),TABELA: users_backup,CONSTRAINT: users_email_key | TIPO: UNIQUE | COLUNA(S): email
2. CONSTRAINTS (CHAVES),TABELA: users_backup,CONSTRAINT: users_company_id_fkey | TIPO: FOREIGN KEY | COLUNA(S): company_id | REFERENCIA: companies(id)
3. ÍNDICES,TABELA: affiliates,ÍNDICE: affiliates_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX affiliates_pkey ON public.affiliates USING btree (id)
3. ÍNDICES,TABELA: ai_token_usage,ÍNDICE: ai_token_usage_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX ai_token_usage_pkey ON public.ai_token_usage USING btree (id)
3. ÍNDICES,TABELA: app_logs,ÍNDICE: app_logs_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX app_logs_pkey ON public.app_logs USING btree (id)
3. ÍNDICES,TABELA: chats,ÍNDICE: chats_customer_phone_key | DEFINIÇÃO: CREATE UNIQUE INDEX chats_customer_phone_key ON public.chats USING btree (customer_phone)
3. ÍNDICES,TABELA: chats,"ÍNDICE: chats_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX chats_pkey ON public.chats USING btree (id, customer_phone)"
3. ÍNDICES,TABELA: companies,ÍNDICE: companies_cnpj_key | DEFINIÇÃO: CREATE UNIQUE INDEX companies_cnpj_key ON public.companies USING btree (cnpj)
3. ÍNDICES,TABELA: companies,ÍNDICE: companies_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX companies_pkey ON public.companies USING btree (id)
3. ÍNDICES,TABELA: company_secrets,ÍNDICE: company_secrets_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX company_secrets_pkey ON public.company_secrets USING btree (company_id)
3. ÍNDICES,TABELA: documents,ÍNDICE: idx_documents_file_path | DEFINIÇÃO: CREATE INDEX idx_documents_file_path ON public.documents USING btree (file_path)
3. ÍNDICES,TABELA: documents,ÍNDICE: documents_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX documents_pkey ON public.documents USING btree (id)
3. ÍNDICES,TABELA: events,ÍNDICE: events_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX events_pkey ON public.events USING btree (telefone)
3. ÍNDICES,TABELA: ingestion_queue,ÍNDICE: ingestion_queue_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX ingestion_queue_pkey ON public.ingestion_queue USING btree (id)
3. ÍNDICES,TABELA: leads,ÍNDICE: leads_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX leads_pkey ON public.leads USING btree (id)
3. ÍNDICES,TABELA: leads,ÍNDICE: leads_telefone_key | DEFINIÇÃO: CREATE UNIQUE INDEX leads_telefone_key ON public.leads USING btree (telefone)
3. ÍNDICES,TABELA: n8n_chat_histories,ÍNDICE: n8n_chat_histories_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX n8n_chat_histories_pkey ON public.n8n_chat_histories USING btree (id)
3. ÍNDICES,TABELA: onboarding_data,ÍNDICE: onboarding_data_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX onboarding_data_pkey ON public.onboarding_data USING btree (id)
3. ÍNDICES,TABELA: plans,ÍNDICE: plans_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX plans_pkey ON public.plans USING btree (id)
3. ÍNDICES,TABELA: products,ÍNDICE: products_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX products_pkey ON public.products USING btree (id)
3. ÍNDICES,TABELA: users,ÍNDICE: users_email_key1 | DEFINIÇÃO: CREATE UNIQUE INDEX users_email_key1 ON public.users USING btree (email)
3. ÍNDICES,TABELA: users,ÍNDICE: users_pkey1 | DEFINIÇÃO: CREATE UNIQUE INDEX users_pkey1 ON public.users USING btree (id)
3. ÍNDICES,TABELA: users_backup,ÍNDICE: users_pkey | DEFINIÇÃO: CREATE UNIQUE INDEX users_pkey ON public.users_backup USING btree (id)
3. ÍNDICES,TABELA: users_backup,ÍNDICE: users_email_key | DEFINIÇÃO: CREATE UNIQUE INDEX users_email_key ON public.users_backup USING btree (email)
4. FUNÇÕES (RPC),FUNÇÃO: array_to_halfvec,"CREATE OR REPLACE FUNCTION public.array_to_halfvec(integer[], integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_halfvec,"CREATE OR REPLACE FUNCTION public.array_to_halfvec(real[], integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_halfvec,"CREATE OR REPLACE FUNCTION public.array_to_halfvec(double precision[], integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_halfvec,"CREATE OR REPLACE FUNCTION public.array_to_halfvec(numeric[], integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_sparsevec,"CREATE OR REPLACE FUNCTION public.array_to_sparsevec(real[], integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_sparsevec,"CREATE OR REPLACE FUNCTION public.array_to_sparsevec(numeric[], integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_sparsevec,"CREATE OR REPLACE FUNCTION public.array_to_sparsevec(double precision[], integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_sparsevec,"CREATE OR REPLACE FUNCTION public.array_to_sparsevec(integer[], integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_vector,"CREATE OR REPLACE FUNCTION public.array_to_vector(double precision[], integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_vector,"CREATE OR REPLACE FUNCTION public.array_to_vector(numeric[], integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_vector,"CREATE OR REPLACE FUNCTION public.array_to_vector(integer[], integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: array_to_vector,"CREATE OR REPLACE FUNCTION public.array_to_vector(real[], integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$array_to_vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: binary_quantize,"CREATE OR REPLACE FUNCTION public.binary_quantize(vector)
 RETURNS bit
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$binary_quantize$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: binary_quantize,"CREATE OR REPLACE FUNCTION public.binary_quantize(halfvec)
 RETURNS bit
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_binary_quantize$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: cosine_distance,"CREATE OR REPLACE FUNCTION public.cosine_distance(sparsevec, sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_cosine_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: cosine_distance,"CREATE OR REPLACE FUNCTION public.cosine_distance(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$cosine_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: cosine_distance,"CREATE OR REPLACE FUNCTION public.cosine_distance(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_cosine_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: create_ingestion_job,"CREATE OR REPLACE FUNCTION public.create_ingestion_job()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  -- Insere uma nova linha diretamente na fila de tarefas.
  insert into public.ingestion_queue (company_id, file_path)
  values ((string_to_array(NEW.name, '/'))[1]::uuid, NEW.name);
  return NEW;
end;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: delete_document_vectors,"CREATE OR REPLACE FUNCTION public.delete_document_vectors()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  -- Apaga os vetores correspondentes na tabela 'documents'
  delete from public.documents
  where metadata->>'source' = (string_to_array(old.name, '/'))[2];
  return old;
end;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: delete_document_vectors_on_storage_delete,"CREATE OR REPLACE FUNCTION public.delete_document_vectors_on_storage_delete()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
BEGIN
  -- A lógica agora é muito mais simples e direta:
  -- Apaga todas as linhas cujo 'file_path' seja igual ao caminho do ficheiro apagado.
  DELETE FROM public.documents
  WHERE file_path = old.name; -- 'old.name' é o caminho completo (ex: 'company_id/documento.pdf')

  RETURN OLD;
END;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: get_affiliates_details,"CREATE OR REPLACE FUNCTION public.get_affiliates_details()
 RETURNS TABLE(affiliate_id uuid, affiliate_name text, login_email text, contact_email text, registration_date timestamp with time zone, commission_rate numeric)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY
    SELECT
        a.id,
        a.name,
        u.email,
        a.contact_email,
        a.created_at,
        a.commission_rate
    FROM
        public.affiliates AS a
    LEFT JOIN
        public.users AS u ON a.id = u.id;
END;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: get_clients_details,"CREATE OR REPLACE FUNCTION public.get_clients_details()
 RETURNS TABLE(company_id uuid, contact_name text, company_name text, company_cnpj text, company_phone text, plan_name text, status text, affiliate_name text, plan_id uuid)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY
    SELECT
        c.id AS company_id,
        pu.full_name AS contact_name,
        c.name AS company_name,
        c.cnpj AS company_cnpj,
        c.phone AS company_phone,
        p.name AS plan_name,
        'Ativo' AS status, -- Placeholder, pode ser uma coluna real no futuro
        a.name AS affiliate_name,
        c.plan_id
    FROM
        public.companies c
        LEFT JOIN public.plans p ON c.plan_id = p.id
        LEFT JOIN public.affiliates a ON c.affiliate_id = a.id
        -- Apenas o primeiro usuário da empresa é considerado o contato principal
        LEFT JOIN (
            SELECT DISTINCT ON (company_id) * FROM public.users
        ) pu ON c.id = pu.company_id;
END;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: get_dashboard_metrics,"CREATE OR REPLACE FUNCTION public.get_dashboard_metrics()
 RETURNS json
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
DECLARE
    -- Variáveis para armazenar o resultado final e o ID da empresa do usuário logado
    result json;
    logged_in_company_id uuid;
BEGIN
    -- 1. Obter o company_id do usuário autenticado
    SELECT company_id INTO logged_in_company_id
    FROM public.users
    WHERE id = auth.uid();

    -- Se não encontrar uma empresa, retorna um JSON vazio para evitar erros
    IF logged_in_company_id IS NULL THEN
        RETURN '{}'::json;
    END IF;

    -- 2. Construir o JSON com todas as métricas agregadas
    WITH chats_mes_corrente AS (
        -- Subquery para filtrar apenas os chats da empresa logada no mês atual
        SELECT *
        FROM public.chats
        WHERE company_id = logged_in_company_id
          AND created_at >= date_trunc('month', current_date)
          AND created_at < date_trunc('month', current_date) + interval '1 month'
    ),
    volume_diario AS (
        -- Subquery para calcular o volume de atendimentos nos últimos 7 dias
        SELECT
            (current_date - g.day) AS day,
            COUNT(c.id) AS count
        FROM generate_series(0, 6) AS g(day)
        LEFT JOIN public.chats c ON date_trunc('day', c.created_at) = (current_date - g.day) AND c.company_id = logged_in_company_id
        GROUP BY 1
        ORDER BY 1
    )
    SELECT
        json_build_object(
            -- Card: Total de Atendimentos no Mês
            'total_atendimentos_mes', (SELECT COUNT(*) FROM chats_mes_corrente),

            -- Card: Resolvidos pela IA (%)
            'resolvidos_ia_percent', ROUND(
                CASE
                    WHEN (SELECT COUNT(*) FROM chats_mes_corrente) > 0 THEN
                        ((SELECT COUNT(*) FROM chats_mes_corrente WHERE status <> 'ATENDIMENTO_HUMANO') * 100.0) / (SELECT COUNT(*) FROM chats_mes_corrente)
                    ELSE 0
                END
            ),

            -- Card: Leads Qualificados (Fundo de Funil ou Pós-Venda)
            'leads_qualificados', (SELECT COUNT(*) FROM chats_mes_corrente WHERE temperatura IN ('FUNDO DO FUNIL', 'PÓS-VENDA')),

            -- Card: Valor Total Gerado nos Leads
            'valor_total_leads', COALESCE((SELECT SUM(lead_value) FROM chats_mes_corrente), 0),

            -- Gráfico: Dados para o Funil de Atendimentos
            'funil_data', json_build_object(
                'topo', (SELECT COUNT(*) FROM chats_mes_corrente WHERE temperatura = 'TOPO DO FUNIL'),
                'meio', (SELECT COUNT(*) FROM chats_mes_corrente WHERE temperatura = 'MEIO DO FUNIL'),
                'fundo', (SELECT COUNT(*) FROM chats_mes_corrente WHERE temperatura = 'FUNDO DO FUNIL')
            ),

            -- Gráfico: Dados para o Volume de Atendimentos
            'volume_ultimos_7_dias', (SELECT json_agg(vd) FROM volume_diario vd)
        )
    INTO result;

    -- 3. Retornar o objeto JSON completo
    RETURN result;
END;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: get_my_company_id,"CREATE OR REPLACE FUNCTION public.get_my_company_id()
 RETURNS uuid
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$BEGIN
  RETURN (SELECT company_id FROM public.users WHERE id = auth.uid());
END;$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec,"CREATE OR REPLACE FUNCTION public.halfvec(halfvec, integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_accum,"CREATE OR REPLACE FUNCTION public.halfvec_accum(double precision[], halfvec)
 RETURNS double precision[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_accum$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_add,"CREATE OR REPLACE FUNCTION public.halfvec_add(halfvec, halfvec)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_add$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_avg,"CREATE OR REPLACE FUNCTION public.halfvec_avg(double precision[])
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_avg$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_cmp,"CREATE OR REPLACE FUNCTION public.halfvec_cmp(halfvec, halfvec)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_cmp$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_combine,"CREATE OR REPLACE FUNCTION public.halfvec_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_combine$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_concat,"CREATE OR REPLACE FUNCTION public.halfvec_concat(halfvec, halfvec)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_concat$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_eq,"CREATE OR REPLACE FUNCTION public.halfvec_eq(halfvec, halfvec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_eq$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_ge,"CREATE OR REPLACE FUNCTION public.halfvec_ge(halfvec, halfvec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_ge$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_gt,"CREATE OR REPLACE FUNCTION public.halfvec_gt(halfvec, halfvec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_gt$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_in,"CREATE OR REPLACE FUNCTION public.halfvec_in(cstring, oid, integer)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_in$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_l2_squared_distance,"CREATE OR REPLACE FUNCTION public.halfvec_l2_squared_distance(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_l2_squared_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_le,"CREATE OR REPLACE FUNCTION public.halfvec_le(halfvec, halfvec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_le$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_lt,"CREATE OR REPLACE FUNCTION public.halfvec_lt(halfvec, halfvec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_lt$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_mul,"CREATE OR REPLACE FUNCTION public.halfvec_mul(halfvec, halfvec)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_mul$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_ne,"CREATE OR REPLACE FUNCTION public.halfvec_ne(halfvec, halfvec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_ne$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_negative_inner_product,"CREATE OR REPLACE FUNCTION public.halfvec_negative_inner_product(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_negative_inner_product$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_out,"CREATE OR REPLACE FUNCTION public.halfvec_out(halfvec)
 RETURNS cstring
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_out$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_recv,"CREATE OR REPLACE FUNCTION public.halfvec_recv(internal, oid, integer)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_recv$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_send,"CREATE OR REPLACE FUNCTION public.halfvec_send(halfvec)
 RETURNS bytea
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_send$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_spherical_distance,"CREATE OR REPLACE FUNCTION public.halfvec_spherical_distance(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_spherical_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_sub,"CREATE OR REPLACE FUNCTION public.halfvec_sub(halfvec, halfvec)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_sub$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_to_float4,"CREATE OR REPLACE FUNCTION public.halfvec_to_float4(halfvec, integer, boolean)
 RETURNS real[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_to_float4$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_to_sparsevec,"CREATE OR REPLACE FUNCTION public.halfvec_to_sparsevec(halfvec, integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_to_sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_to_vector,"CREATE OR REPLACE FUNCTION public.halfvec_to_vector(halfvec, integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_to_vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: halfvec_typmod_in,"CREATE OR REPLACE FUNCTION public.halfvec_typmod_in(cstring[])
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_typmod_in$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: hamming_distance,"CREATE OR REPLACE FUNCTION public.hamming_distance(bit, bit)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$hamming_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: handle_new_user,"CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
 SET search_path TO 'public'
AS $function$BEGIN
  -- 1. Cria a nova empresa, usando o ID do usuário como ID da empresa e populando com os dados do cadastro.
  INSERT INTO public.companies (
    id, 
    name,                               -- Nome da empresa será o nome completo do usuário
    cnpj,                               -- Documento do usuário
    asaas_customer_id                   -- ID do cliente Asaas
  )
  VALUES (
    new.id, 
    new.raw_user_meta_data->>'full_name',
    new.raw_user_meta_data->>'cpf_cnpj',
    new.raw_user_meta_data->>'asaas_customer_id'
  );

  -- 2. Cria os registros de segredos para a nova empresa.
  INSERT INTO public.company_secrets (company_id)
  VALUES (new.id);

  -- 3. Insere o registro na tabela public.users, agora incluindo o nome completo e o company_id.
  INSERT INTO public.users (
    id, 
    email, 
    company_id,
    full_name                           -- Nome completo do usuário
  )
  VALUES (
    new.id, 
    new.email, 
    new.id,
    new.raw_user_meta_data->>'full_name'
  );
  
  RETURN new;
END;$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: hnsw_bit_support,"CREATE OR REPLACE FUNCTION public.hnsw_bit_support(internal)
 RETURNS internal
 LANGUAGE c
AS '$libdir/vector', $function$hnsw_bit_support$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: hnsw_halfvec_support,"CREATE OR REPLACE FUNCTION public.hnsw_halfvec_support(internal)
 RETURNS internal
 LANGUAGE c
AS '$libdir/vector', $function$hnsw_halfvec_support$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: hnsw_sparsevec_support,"CREATE OR REPLACE FUNCTION public.hnsw_sparsevec_support(internal)
 RETURNS internal
 LANGUAGE c
AS '$libdir/vector', $function$hnsw_sparsevec_support$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: hnswhandler,"CREATE OR REPLACE FUNCTION public.hnswhandler(internal)
 RETURNS index_am_handler
 LANGUAGE c
AS '$libdir/vector', $function$hnswhandler$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: inner_product,"CREATE OR REPLACE FUNCTION public.inner_product(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$inner_product$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: inner_product,"CREATE OR REPLACE FUNCTION public.inner_product(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_inner_product$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: inner_product,"CREATE OR REPLACE FUNCTION public.inner_product(sparsevec, sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_inner_product$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: ivfflat_bit_support,"CREATE OR REPLACE FUNCTION public.ivfflat_bit_support(internal)
 RETURNS internal
 LANGUAGE c
AS '$libdir/vector', $function$ivfflat_bit_support$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: ivfflat_halfvec_support,"CREATE OR REPLACE FUNCTION public.ivfflat_halfvec_support(internal)
 RETURNS internal
 LANGUAGE c
AS '$libdir/vector', $function$ivfflat_halfvec_support$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: ivfflathandler,"CREATE OR REPLACE FUNCTION public.ivfflathandler(internal)
 RETURNS index_am_handler
 LANGUAGE c
AS '$libdir/vector', $function$ivfflathandler$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: jaccard_distance,"CREATE OR REPLACE FUNCTION public.jaccard_distance(bit, bit)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$jaccard_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l1_distance,"CREATE OR REPLACE FUNCTION public.l1_distance(sparsevec, sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_l1_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l1_distance,"CREATE OR REPLACE FUNCTION public.l1_distance(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$l1_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l1_distance,"CREATE OR REPLACE FUNCTION public.l1_distance(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_l1_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_distance,"CREATE OR REPLACE FUNCTION public.l2_distance(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$l2_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_distance,"CREATE OR REPLACE FUNCTION public.l2_distance(halfvec, halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_l2_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_distance,"CREATE OR REPLACE FUNCTION public.l2_distance(sparsevec, sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_l2_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_norm,"CREATE OR REPLACE FUNCTION public.l2_norm(sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_l2_norm$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_norm,"CREATE OR REPLACE FUNCTION public.l2_norm(halfvec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_l2_norm$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_normalize,"CREATE OR REPLACE FUNCTION public.l2_normalize(sparsevec)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_l2_normalize$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_normalize,"CREATE OR REPLACE FUNCTION public.l2_normalize(vector)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$l2_normalize$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: l2_normalize,"CREATE OR REPLACE FUNCTION public.l2_normalize(halfvec)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_l2_normalize$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: login,"CREATE OR REPLACE FUNCTION public.login(email_param text, password_param text)
 RETURNS json
 LANGUAGE plpgsql
AS $function$
DECLARE
    user_record public.users;
    result json;
BEGIN
    SELECT * INTO user_record
    FROM public.users
    WHERE email = email_param;

    IF NOT FOUND THEN
        RETURN json_build_object('status', 404, 'message', 'Usuário não encontrado');
    END IF;

    -- A função crypt() compara a senha enviada com o hash salvo
    IF user_record.password_hash = crypt(password_param, user_record.password_hash) THEN
        result := json_build_object(
            'status', 200,
            'message', 'Login bem-sucedido',
            'payload', json_build_object(
                'userId', user_record.id,
                'companyId', user_record.company_id,
                'role', user_record.role,
                'fullName', user_record.full_name
            )
        );
        RETURN result;
    ELSE
        RETURN json_build_object('status', 401, 'message', 'Senha inválida');
    END IF;
END;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: match_documents,"CREATE OR REPLACE FUNCTION public.match_documents(query_embedding vector, match_count integer DEFAULT NULL::integer, filter jsonb DEFAULT '{}'::jsonb)
 RETURNS TABLE(id bigint, content text, metadata jsonb, similarity double precision)
 LANGUAGE plpgsql
AS $function$
#variable_conflict use_column
begin
  return query
  select
    id,
    content,
    metadata,
    1 - (documents.embedding <=> query_embedding) as similarity
  from documents
  where metadata @> filter
  order by documents.embedding <=> query_embedding
  limit match_count;
end;
$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec,"CREATE OR REPLACE FUNCTION public.sparsevec(sparsevec, integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_cmp,"CREATE OR REPLACE FUNCTION public.sparsevec_cmp(sparsevec, sparsevec)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_cmp$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_eq,"CREATE OR REPLACE FUNCTION public.sparsevec_eq(sparsevec, sparsevec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_eq$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_ge,"CREATE OR REPLACE FUNCTION public.sparsevec_ge(sparsevec, sparsevec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_ge$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_gt,"CREATE OR REPLACE FUNCTION public.sparsevec_gt(sparsevec, sparsevec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_gt$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_in,"CREATE OR REPLACE FUNCTION public.sparsevec_in(cstring, oid, integer)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_in$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_l2_squared_distance,"CREATE OR REPLACE FUNCTION public.sparsevec_l2_squared_distance(sparsevec, sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_l2_squared_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_le,"CREATE OR REPLACE FUNCTION public.sparsevec_le(sparsevec, sparsevec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_le$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_lt,"CREATE OR REPLACE FUNCTION public.sparsevec_lt(sparsevec, sparsevec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_lt$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_ne,"CREATE OR REPLACE FUNCTION public.sparsevec_ne(sparsevec, sparsevec)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_ne$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_negative_inner_product,"CREATE OR REPLACE FUNCTION public.sparsevec_negative_inner_product(sparsevec, sparsevec)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_negative_inner_product$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_out,"CREATE OR REPLACE FUNCTION public.sparsevec_out(sparsevec)
 RETURNS cstring
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_out$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_recv,"CREATE OR REPLACE FUNCTION public.sparsevec_recv(internal, oid, integer)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_recv$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_send,"CREATE OR REPLACE FUNCTION public.sparsevec_send(sparsevec)
 RETURNS bytea
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_send$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_to_halfvec,"CREATE OR REPLACE FUNCTION public.sparsevec_to_halfvec(sparsevec, integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_to_halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_to_vector,"CREATE OR REPLACE FUNCTION public.sparsevec_to_vector(sparsevec, integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_to_vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: sparsevec_typmod_in,"CREATE OR REPLACE FUNCTION public.sparsevec_typmod_in(cstring[])
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$sparsevec_typmod_in$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: subvector,"CREATE OR REPLACE FUNCTION public.subvector(vector, integer, integer)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$subvector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: subvector,"CREATE OR REPLACE FUNCTION public.subvector(halfvec, integer, integer)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_subvector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector,"CREATE OR REPLACE FUNCTION public.vector(vector, integer, boolean)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_accum,"CREATE OR REPLACE FUNCTION public.vector_accum(double precision[], vector)
 RETURNS double precision[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_accum$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_add,"CREATE OR REPLACE FUNCTION public.vector_add(vector, vector)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_add$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_avg,"CREATE OR REPLACE FUNCTION public.vector_avg(double precision[])
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_avg$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_cmp,"CREATE OR REPLACE FUNCTION public.vector_cmp(vector, vector)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_cmp$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_combine,"CREATE OR REPLACE FUNCTION public.vector_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_combine$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_concat,"CREATE OR REPLACE FUNCTION public.vector_concat(vector, vector)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_concat$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_dims,"CREATE OR REPLACE FUNCTION public.vector_dims(halfvec)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$halfvec_vector_dims$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_dims,"CREATE OR REPLACE FUNCTION public.vector_dims(vector)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_dims$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_eq,"CREATE OR REPLACE FUNCTION public.vector_eq(vector, vector)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_eq$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_ge,"CREATE OR REPLACE FUNCTION public.vector_ge(vector, vector)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_ge$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_gt,"CREATE OR REPLACE FUNCTION public.vector_gt(vector, vector)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_gt$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_in,"CREATE OR REPLACE FUNCTION public.vector_in(cstring, oid, integer)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_in$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_l2_squared_distance,"CREATE OR REPLACE FUNCTION public.vector_l2_squared_distance(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_l2_squared_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_le,"CREATE OR REPLACE FUNCTION public.vector_le(vector, vector)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_le$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_lt,"CREATE OR REPLACE FUNCTION public.vector_lt(vector, vector)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_lt$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_mul,"CREATE OR REPLACE FUNCTION public.vector_mul(vector, vector)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_mul$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_ne,"CREATE OR REPLACE FUNCTION public.vector_ne(vector, vector)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_ne$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_negative_inner_product,"CREATE OR REPLACE FUNCTION public.vector_negative_inner_product(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_negative_inner_product$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_norm,"CREATE OR REPLACE FUNCTION public.vector_norm(vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_norm$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_out,"CREATE OR REPLACE FUNCTION public.vector_out(vector)
 RETURNS cstring
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_out$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_recv,"CREATE OR REPLACE FUNCTION public.vector_recv(internal, oid, integer)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_recv$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_send,"CREATE OR REPLACE FUNCTION public.vector_send(vector)
 RETURNS bytea
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_send$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_spherical_distance,"CREATE OR REPLACE FUNCTION public.vector_spherical_distance(vector, vector)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_spherical_distance$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_sub,"CREATE OR REPLACE FUNCTION public.vector_sub(vector, vector)
 RETURNS vector
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_sub$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_to_float4,"CREATE OR REPLACE FUNCTION public.vector_to_float4(vector, integer, boolean)
 RETURNS real[]
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_to_float4$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_to_halfvec,"CREATE OR REPLACE FUNCTION public.vector_to_halfvec(vector, integer, boolean)
 RETURNS halfvec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_to_halfvec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_to_sparsevec,"CREATE OR REPLACE FUNCTION public.vector_to_sparsevec(vector, integer, boolean)
 RETURNS sparsevec
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_to_sparsevec$function$
"
4. FUNÇÕES (RPC),FUNÇÃO: vector_typmod_in,"CREATE OR REPLACE FUNCTION public.vector_typmod_in(cstring[])
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/vector', $function$vector_typmod_in$function$
"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: affiliates,POLÍTICA: Allow authenticated users to read affiliates | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): true | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: ai_token_usage,POLÍTICA: Usuários podem ver e criar logs de uso da sua própria empresa | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: app_logs,"POLÍTICA: Allow users to read their own company logs | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): (( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid())) = company_id) | VERIFICANDO (WITH CHECK): N/A"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: app_logs,POLÍTICA: Allow authenticated users to insert logs | COMANDO: INSERT | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): N/A | VERIFICANDO (WITH CHECK): (auth.uid() = user_id)
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: chats,POLÍTICA: Permitir acesso total aos chats da própria empresa | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: companies,POLÍTICA: Usuários podem ver os dados da sua própria empresa | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: companies,"POLÍTICA: Authenticated users can view their own company | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): (id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid()))) | VERIFICANDO (WITH CHECK): N/A"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: companies,"POLÍTICA: Allow users to update their own company | COMANDO: UPDATE | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid())) = id) | VERIFICANDO (WITH CHECK): N/A"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: company_secrets,POLÍTICA: Allow company members to access their own secrets | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = app_auth.get_current_company_id()) | VERIFICANDO (WITH CHECK): (company_id = app_auth.get_current_company_id())
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: company_secrets,POLÍTICA: Usuários só podem aceder aos segredos da sua própria empresa | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: company_secrets,POLÍTICA: Usuários só podem acessar os segredos da sua própria empresa | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: events,POLÍTICA: Permitir acesso total aos eventos da própria empresa | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: plans,POLÍTICA: Allow authenticated users to read plans | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): true | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: plans,"POLÍTICA: Allow admins full access to plans | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): (( SELECT users.role
   FROM users
  WHERE (users.id = auth.uid())) = 'admin'::text) | VERIFICANDO (WITH CHECK): (( SELECT users.role
   FROM users
  WHERE (users.id = auth.uid())) = 'admin'::text)"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: products,"POLÍTICA: Allow delete for own company products | COMANDO: DELETE | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid()))) | VERIFICANDO (WITH CHECK): N/A"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: products,"POLÍTICA: Allow read access to own company products | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid()))) | VERIFICANDO (WITH CHECK): N/A"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: products,"POLÍTICA: Allow update for own company products | COMANDO: UPDATE | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid()))) | VERIFICANDO (WITH CHECK): N/A"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: products,"POLÍTICA: Users can manage their own company's products | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid()))) | VERIFICANDO (WITH CHECK): (company_id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid())))"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: products,"POLÍTICA: Allow insert for own company products | COMANDO: INSERT | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): N/A | VERIFICANDO (WITH CHECK): (company_id = ( SELECT users.company_id
   FROM users
  WHERE (users.id = auth.uid())))"
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: users,POLÍTICA: Allow authenticated users to read public users | COMANDO: SELECT | PERMISSÃO: PERMISSIVE | PARA: authenticated | USANDO (USING): true | VERIFICANDO (WITH CHECK): N/A
6. POLÍTICAS DE SEGURANÇA (RLS),TABELA: users_backup,POLÍTICA: Permitir acesso total aos utilizadores da própria empresa | COMANDO: ALL | PERMISSÃO: PERMISSIVE | PARA: public | USANDO (USING): (company_id = get_my_company_id()) | VERIFICANDO (WITH CHECK): N/A